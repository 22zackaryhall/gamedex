apply gradleFile('application.gradle')
mainClassName = "com.gitlab.ykrasik.gamedex.javafx.Main"
apply plugin: 'javafx-gradle-plugin'

dependencies {
    compile project(":core:gamedex-core")       // FIXME: Depend only on gamedex-core-api
    fullDependency ":app:javafx:gamedex-javafx-common"

    project(":provider").subprojects {
        compile it
        testCompile project(path: ":provider:${it.name}", configuration: 'testArtifacts')
    }

//    compile bootstrapFx
}

jfx {
//    verbose = true
    mainClass = mainClassName
    jfxMainAppJarName = "gamedex.jar"
    identifier = "faeb5e02-a70d-4f15-b09b-77022499cd18"
    vendor = "ykrasik"
//    bundler = "ALL" // set this to some specific, if your don't want all bundlers running, examples "windows.app", "jnlp", ...
    jvmProperties = ["-Xmx": javaMaxHeap]
    nativeReleaseVersion = version
    needShortcut = true
    needMenu = true
//    bundleArguments = [
//         dont bundle JRE (not recommended, but increases build-size/-speed)
//        runtime: null
//    ]
    appName = "GameDex"
//    noBlobSigning = false // when using bundler "jnlp", you can choose to NOT use blob signing
//    failOnError = false
    skipJNLP = true
    skipMainClassScanning = true

    // per default the outcome of the gradle "jarTask" will be used, set this to specify otherwise (like proguard-output)
//    alternativePathToJarFile = null // String
}

task customizeWindowsInstaller(type: Copy) {
    from 'src/main/deploy/package/windows/'
    into 'src/main/deploy/package/windows/'
    include 'gamedex.iss.template'
    rename { file -> 'gamedex.iss' }
    expand(version: version)
}

jfxNative {
    dependsOn customizeWindowsInstaller

    doLast {
        delete 'src/main/deploy/package/windows/gamedex.iss'
    }
}