buildscript {
    ext {
        dep = [:].with {
            kotlin = [:].with {
                v = '1.0.4'
                std = [group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: v]
                reflect = [group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: v]
                gradle = [group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: v]
                dokka = [group: 'org.jetbrains.dokka', name: 'dokka-gradle-plugin', version: '0.9.7']
                delegate
            }

            groovy = [group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.7']

            guice = [:].with {
                v = '4.1.0'
                core = [group: 'com.google.inject', name: 'guice', version: v]
                multibindings = [group: 'com.google.inject.extensions', name: 'guice-multibindings', version: v]
                junit = [group: 'com.carlosbecker', name: 'guice-junit-test-runner', version: '1.1']
                delegate
            }

            slf4j = [group: 'org.slf4j', name: 'slf4j-api', version: '1.7.6']
            logback = [group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.2']

            config = [group: 'com.typesafe', name: 'config', version: '1.3.1']

            guava = [group: 'com.google.guava', name: 'guava', version: '18.0']
            commonsLang3 = [group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.2']

            jodaTime = [group: 'joda-time', name: 'joda-time', version: '2.9.3']

            jaci = [group: 'com.github.ykrasik', name: 'jaci-javafx-cli', version: '0.4.0']

            fuel = [group: 'com.github.kittinunf.fuel', name: 'fuel', version: '1.3.1']

            jackson = [:].with {
                v = '2.8.3'
                core = [group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: v]
                kotlin = [group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: v]
                delegate
            }

            h2 = [group: 'com.h2database', name: 'h2', version: '1.4.192']
            exposed = [group: 'org.jetbrains.exposed', name: 'exposed', version: '0.6.5']
            flyway = [group: 'org.flywaydb', name: 'flyway-core', version: '4.0.3']

            controlsFx = [group: 'org.controlsfx', name: 'controlsfx', version: '8.20.9']

            junit = [group: 'junit', name: 'junit', version: '4.11']
            mockito = [:].with {
                core = [group: 'org.mockito', name: 'mockito-all', version: '1.9.5']
                kotlin = [group: 'com.nhaarman', name: 'mockito-kotlin', version: '0.7.0']
                delegate
            }

            delegate
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath dep.kotlin.gradle
        classpath dep.kotlin.dokka
    }
}

allprojects {
    apply plugin: "java"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://dl.bintray.com/kotlin/exposed" }
    }
}

subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'org.jetbrains.dokka'

    dependencies {
        compile dep.kotlin.std
        compile dep.kotlin.reflect

        compile dep.slf4j

        compile dep.guice.core
        compile dep.guice.multibindings

        testCompile dep.junit
        testCompile dep.mockito.core
        testCompile dep.mockito.kotlin
        testCompile dep.guice.junit
    }

    dokka {
        outputFormat = 'javadoc'
        outputDirectory = "$buildDir/javadoc"
        processConfigurations = ['compile']
    }
}